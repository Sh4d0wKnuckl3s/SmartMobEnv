#!/bin/bash

figlet SmartMobEnv
echo "Version: 1.0"

usage(){
echo "MadeBy: SK ~ (Sh4d0wKnuckl3s)"
echo " "
echo "Thank to: alacerda, hack'n'roll academy "
echo " "
echo "This tool was made to try to help with the hassle of installing the entire environment for pentest mobile,
enjoy and give me opinions for improvements. Feel free to make changes."
echo " "
echo "Initial Usage: $0 -B, -D, -M, -F, -Q, -h (help)"
}

if [ -e /usr/bin/figlet ]
then
        echo
else
        echo " "
	echo "Installing figlet... After execute the script again!"
        echo " "
        sudo apt install figlet -y
fi

ALL() {
	echo "BurpSuite Certificate Install: "
        curl -s http://$IP:$PORT/cert -o cacert.der && adb devices && openssl x509 -inform DER -in cacert.der -out cacert.pem && openssl x509 -inform PEM -subject_hash_old -in cacert.pem |head -1 > output && for n in $(cat output);do mv cacert.pem $n.0;done && adb kill-server && adb connect $ipdevice && adb root && adb remount && adb push 9a5ba575.0 /sdcard/ && adb shell mv /sdcard/9a5ba575.0 /system/etc/security/cacerts && adb shell chmod 644 /system/etc/security/cacerts/9a5ba575.0

	echo " "
	
	echo "Frida Install: "
	adb connect $ipdevice
if [ `adb shell uname -m` = "64" ]
then
	pip install -q virtualenv && virtualenv Frida-$VERSION && source Frida-$VERSION/bin/activate && pip install -q frida-tools && wget https://github.com/frida/frida/releases/download/12.9.8/frida-server-12.9.8-android-x86_64.xz && unxz frida-server-12.9.8-android-x86.xz && mv frida-server-12.9.8-android-x86_64 frida-server && adb push frida-server /sdcard && adb shell cp /sdcard/frida-server /data/local/tmp && adb shell chmod +x /data/local/tmp/frida-server
        echo " "
        echo "We recommend restarting the device (adb reboot)"
else
        pip install -q virtualenv && virtualenv Frida-$VERSION && source Frida-$VERSION/bin/activate && pip install -q frida-tools && wget https://github.com/frida/frida/releases/download/12.9.8/frida-server-12.9.8-android-x86.xz && unxz frida-server-12.9.8-android-x86.xz && mv frida-server-12.9.8-android-x86 frida-server && adb push frida-server /sdcard && adb shell cp /sdcard/frida-server /data/local/tmp && adb shell chmod +x /data/local/tmp/frida-server
        echo " "
        echo "We recommend restarting the device (adb reboot)"

fi
	echo " "
	echo "Drozer Installation: "
	pip -q install drozer && pip -q install twisted && adb forward tcp:31415 tcp:31415 && wget -q https://github.com/mwrlabs/drozer/releases/download/2.3.4/drozer-agent-2.3.4.apk && mv drozer-agent-2.3.4.apk drozer.apk && adb install drozer.apk	
	
	echo " "
	echo "MOBSF Installation: "

        if [ -e /usr/bin/docker ]
then
        sudo docker pull opensecurity/mobile-security-framework-mobsf
else
        echo " "
        echo "Installing the docker and mobsf..."
        echo " "
        apt install apt-transport-https ca-certificates curl software-properties-common && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - && sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable" && sudo apt update && sudo apt install docker-ce && sudo docker pull opensecurity/mobile-security-framework-mobsf

        fi
}

BURP() {
        echo "BurpSuite Certificate Install: "
        curl -s http://$IP:$PORT/cert -o cacert.der && openssl x509 -inform DER -in cacert.der -out cacert.pem && openssl x509 -inform PEM -subject_hash_old -in cacert.pem |head -1 > output && for n in $(cat output);do mv cacert.pem $n.0;done && rm -rf output && adb kill-server && adb connect $ipdevice && adb root && adb remount && chmod 644 9a5ba575.0 && adb push 9a5ba575.0 /sdcard/ && adb shell mv /sdcard/9a5ba575.0 /system/etc/security/cacerts && adb shell chmod 644 /system/etc/security/cacerts/9a5ba575.0
}


adbconnect(){
	adb connect $ipdevice
}

FRIDA() {
        echo "Frida Install: "
	adb connect $ipdevice
if [ `adb shell uname -m` = "64" ]
then
	pip -q install virtualenv && virtualenv Frida-$VERSION && source Frida-$VERSION/bin/activate && pip -q install frida-tools && wget https://github.com/frida/frida/releases/download/12.9.8/frida-server-12.9.8-android-x86_64.xz && unxz frida-server-12.9.8-android-x86.xz && mv frida-server-12.9.8-android-x86_64 frida-server && adb push frida-server /sdcard && adb shell cp /sdcard/frida-server /data/local/tmp && adb shell chmod +x /data/local/tmp/frida-server
	echo " "
	echo "We recommend restarting the device (adb reboot)"
else
	pip -q install virtualenv && virtualenv Frida-$VERSION && source Frida-$VERSION/bin/activate && pip -q install frida-tools && wget https://github.com/frida/frida/releases/download/12.9.8/frida-server-12.9.8-android-x86.xz && unxz frida-server-12.9.8-android-x86.xz && mv frida-server-12.9.8-android-x86 frida-server && adb push frida-server /sdcard && adb shell cp /sdcard/frida-server /data/local/tmp && adb shell chmod +x /data/local/tmp/frida-server
	echo " "
	echo "We recommend restarting the device (adb reboot)"
fi
}

BurpSettings() {
	echo "Burp Suite:"
	echo "-i : Burp-ip"
	echo "-p : Burp-port"
       	echo "-L : List devices with adb"
	echo " "
	echo "Full Usage: $0 -i <burp-ip> -p <burp-port> -I <ip-device> -b"
	echo " "	
}

FridaSettings() {
        echo "Frida:"
	echo "-i : Device-ip"
	echo "-L : List devices with adb"
	echo " "
	echo "Full Usage: $0 -I <ip-device> -f"
}

MobsfSettings() {
        echo "Mobsf:"
	echo " "
	echo "Full Usage: $0 -m"
}

DrozerSettings() {
        echo "Drozer:"
	echo " "
	echo "-L : List devices with adb"
        echo " "
	echo "$0 -I <device-ip> -d"
}

FullSettings() {
	echo "Full Installation"
	echo " "
	echo "-L : List devices with adb"
        echo " "
	echo "Usage: $0 -i <ip-burp> -I <ip-device> -p <burp-port> -A"
}

function DROZER() {
	echo "Drozer Installation: "
	pip -q install drozer && pip -q install twisted && adb forward tcp:31415 tcp:31415 && adb connect $ipdevice && wget -q https://github.com/mwrlabs/drozer/releases/download/2.3.4/drozer-agent-2.3.4.apk && mv drozer-agent-2.3.4.apk drozer.apk && adb install drozer.apk
	echo " "
	echo "Now you need to go to the device, open the drozer, click OFF and execute the command drozer console connect"
}

MOBSF() {
	echo "MOBSF Installation: "

	if [ -e /usr/bin/docker ]
then
	sudo docker pull opensecurity/mobile-security-framework-mobsf
else
        echo " "
	echo "Installing the docker and mobsf..."
	echo " "
	apt install apt-transport-https ca-certificates curl software-properties-common && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - && sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable" && sudo apt update && sudo apt install docker-ce && sudo docker pull opensecurity/mobile-security-framework-mobsf

	fi
}
echo " "

while getopts "I:i:p:bfdmaACLBFMDQh" OPT;do
case "$OPT" in
	i) IP=$OPTARG;; 
	I) ipdevice=$OPTARG;;
	p) PORT=$OPTARG;; 
	b) BURP ;; 
        f) FRIDA ;; 
        d) DROZER ;; 
	m) MOBSF ;;
	L) LDEVICE ;;
	A) ALL ;; 
	C) adbconnect ;;
	Q) FullSettings ;;
	B) BurpSettings ;;
        F) FridaSettings ;;
        M) MobsfSettings ;;
        D) DrozerSettings ;;
	h|?) usage ;;
esac
done
